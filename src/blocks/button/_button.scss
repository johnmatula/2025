@use "utilities" as *;

.buttonset {
}

a.button {
  @include smooth-box(19);
  
  background: $hue-neutral-99;
  display: inline-block;
  padding: s(2) s(4);
  
  // TODO: Clean up
  // TODO: Extend to use any shape! As a bug demonstrated, other “chunky”
  //       shapes could work well, like a block arrow, rounded star, etc.
  &.button--pushy {
    $button-pushy-raise: #{rem(5)};
    $button-pushy-press: #{rem(-5)};
    $button-pushy-time: .36s;
    $button-pushy-ease: cubic-bezier(.22,1.28,.82,1);
    
    
    /* Main button text */
    /* Use slight transparency on text color to
        get a little benefit of the dimmed :active state */
    
    @include typography(540, $t1, s(3.5), rem(-0.07));

      background: transparent;
      display: flex;
      justify-content: center;
      align-items: center;
      width: auto;
      color: #f5f3f1fa;
      border-bottom: 0px solid transparent;
      padding: s(3) s(4);
      position: relative;
      text-decoration: none;
      transform: scale3d(1,1,1);
      transition: transform $button-pushy-time $button-pushy-ease;
      transform-origin: center bottom;
      z-index: 0;
      -webkit-user-select: none;
      cursor: pointer;

    
    /* button face/fill */
    &::before {
      @include smooth-box(19);
      
      content: '';
      display: block;
      position: absolute;
      transform: translate(0, 0);
      left: 0;
      right: 0;
      bottom: $button-pushy-raise;
      top: 0;
      background: #9d1907;
      z-index: -1;
      opacity: 1;
      transition: transform $button-pushy-time $button-pushy-ease, opacity $button-pushy-time $button-pushy-ease;
    }
    
    /* shadow */
    &::after {
      @include smooth-box(19);
      
      align-items: center;
      justify-content: center;
      content: '';
      display: flex;
      transform: translate(0, 0px);
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      opacity: 1;
      transition: transform $button-pushy-time $button-pushy-ease;
      background: #5c0d03;
      z-index: -2;
    }
    
    /** On click **********/
    
    &:active {
      transform: translate(0, $button-pushy-raise);
      transition: transform 0s;
    }
    
    /* fill */
    &:active::before {
      transform: translate(0px, 0px);
      opacity: .75;
      transition: transform 0s, opacity 0s;
    }
    
    /* shadow */
    &:active::after {
      opacity: 1.8;
      transition: transform 0s;
      transform: translate(0, $button-pushy-press);
    }
    
    &.button--left {
      justify-content: flex-start;
    }
    
    &.button--rarr {
      justify-content: flex-start;
      
      &::after {
        
      }
    }
    
    &.button--rarr span {
      display: flex;
      flex: 1 1 100%;
      justify-content: space-between;
    }
      
    &.button--rarr span::after {
      content: "→";
      flex: 0 0 auto;
      padding: 0 0 0 s(2);
    }
  }
}